[{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chris Mainey. Author, maintainer. NHS-R Community. Copyright holder.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mainey C (2023). NCLRtemplates: NCL R templates. https://ncl-icb-analytics.github.io/NCLRtemplates/, https://github.com/ncl-icb-analytics/NCLRtemplates/.","code":"@Manual{,   title = {NCLRtemplates: NCL R templates},   author = {Chris Mainey},   year = {2023},   note = {https://ncl-icb-analytics.github.io/NCLRtemplates/, https://github.com/ncl-icb-analytics/NCLRtemplates/}, }"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/index.html","id":"nclrtemplates-","dir":"","previous_headings":"","what":"NCL R templates","title":"NCL R templates","text":"package provides ggplot2 themes colour palettes, well rmarkdown templates use NCL ICB analytical teams.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/index.html","id":"install-instructions","dir":"","previous_headings":"","what":"Install Instructions","title":"NCL R templates","text":"package can installed using devtools remotes: exported functions start prefix “ncl_theme_”, except ggplot2 gradient colour scale functions, form scale_*_ncl.","code":"devtools::install_github(\"ncl-icb-analytics/NCLRtemplates\")  remotes::install_github(\"ncl-icb-analytics/NCLRtemplates\")"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"NCL R templates","text":"packages documentation can found .","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_document.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to an NCL Word document — ncl_document","title":"Convert to an NCL Word document — ncl_document","text":"Format converting R Markdown NCL ICB branded MS Word document.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to an NCL Word document — ncl_document","text":"","code":"ncl_document(   use_numbered_headings = FALSE,   toc = FALSE,   toc_depth = 1,   fig_caption = TRUE,   df_print = \"kable\",   highlight = \"default\",   keep_md = FALSE,   md_extensions = NULL,   pandoc_args = NULL )"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to an NCL Word document — ncl_document","text":"use_numbered_headings use numbered headings? Defaults false toc TRUE include table contents output toc_depth Depth headers include table contents fig_caption TRUE render figures captions df_print Method used printing data frames. Valid values include \"default\", \"kable\", \"tibble\", \"paged\". \"default\" method uses corresponding S3 method print, typically print.data.frame. \"kable\" method uses knitr::kable function. \"tibble\" method uses tibble package print summary data frame. \"paged\" method creates paginated HTML table (note method valid formats produce HTML). addition named methods can also pass arbitrary function used printing data frames. can disable df_print behavior entirely setting option rmarkdown.df_print FALSE. See Data frame printing section bookdown book examples. highlight Syntax highlighting style passed Pandoc. Supported built-styles include \"default\", \"tango\", \"pygments\", \"kate\",  \"monochrome\", \"espresso\", \"zenburn\", \"haddock\", \"breezedark\". Two custom styles also included, \"arrow\", accessible color scheme,   \"rstudio\", mimics default IDE theme. Alternatively, supply   path .theme file use   custom Pandoc   style. Note custom theme requires Pandoc 2.0+. Pass NULL prevent syntax highlighting. keep_md Keep markdown file generated knitting. md_extensions Markdown extensions added removed default definition R Markdown. See rmarkdown_format additional details. pandoc_args Additional command line options pass pandoc","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_document.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to an NCL Word document — ncl_document","text":"R Markdown output format pass render","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_document.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert to an NCL Word document — ncl_document","text":"See online documentation additional details using word_document format.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_document.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to an NCL Word document — ncl_document","text":"","code":"if (FALSE) { library(rmarkdown)  # simple invocation render(\"input.Rmd\", ncl_document()) }"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_presentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to an NCL xaringan presentation — ncl_presentation","title":"Convert to an NCL xaringan presentation — ncl_presentation","text":"Format converting R Markdown NCL branded xaringan presentation.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_presentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to an NCL xaringan presentation — ncl_presentation","text":"","code":"ncl_presentation(...)"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_presentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to an NCL xaringan presentation — ncl_presentation","text":"... additional arguments pass [xaringan::moon_reader()]","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_presentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to an NCL xaringan presentation — ncl_presentation","text":"R Markdown output format pass render","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_presentation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to an NCL xaringan presentation — ncl_presentation","text":"","code":"if (FALSE) { library(rmarkdown)  # simple invocation render(\"input.Rmd\", ncl_presentation()) }"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"NCL Theme Colours — ncl_theme_cols","title":"NCL Theme Colours — ncl_theme_cols","text":"function returns colours used NCL theme named vector RGB values hexadecimal form.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCL Theme Colours — ncl_theme_cols","text":"","code":"ncl_theme_cols(   ...,   palette = c(NA, \"ics\", \"icb\", \"icb_darkblue\", \"icb_brightblue\", \"icb_aquablue\",     \"icb_lightblue\", \"icb_nhsblue\", \"icb_darkgrey\", \"icb_midgrey\", \"ics_purple\",     \"ics_pink\", \"ics_limegreen\", \"ics_brightgreen\", \"ics_teal\") )"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NCL Theme Colours — ncl_theme_cols","text":"... individual colours wish get values palette name palette select colours ","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NCL Theme Colours — ncl_theme_cols","text":"named vector RGB colours hexadecimal form","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NCL Theme Colours — ncl_theme_cols","text":"arguments passed function, colours returned. specific colours required, names colours required can passed strings function, colours returned. \"palette\" selected arguments passed ... one palette can selected time.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NCL Theme Colours — ncl_theme_cols","text":"","code":"# show all of the colours ncl_theme_cols() #>    icb_darkblue_100     icb_darkblue_80     icb_darkblue_60     icb_darkblue_40  #>           \"#003087\"           \"#33599f\"           \"#6683b7\"           \"#99accf\"  #>     icb_darkblue_20  icb_brightblue_100   icb_brightblue_80   icb_brightblue_60  #>           \"#ccd6e7\"           \"#0072CE\"           \"#338ed8\"           \"#66aae2\"  #>   icb_brightblue_40   icb_brightblue_20    icb_aquablue_100     icb_aquablue_80  #>           \"#99c7eb\"           \"#cce3f5\"           \"#00A9CE\"           \"#33bad8\"  #>     icb_aquablue_60     icb_aquablue_40     icb_aquablue_20   icb_lightblue_100  #>           \"#66cbe2\"           \"#99ddeb\"           \"#cceef5\"           \"#41B6E6\"  #>    icb_lightblue_80    icb_lightblue_60    icb_lightblue_40    icb_lightblue_20  #>           \"#67c5eb\"           \"#8dd3f0\"           \"#b3e2f5\"           \"#d9f0fa\"  #>     icb_nhsblue_100      icb_nhsblue_80      icb_nhsblue_60      icb_nhsblue_40  #>           \"#005EB8\"           \"#337ec6\"           \"#669ed4\"           \"#99bfe3\"  #>      icb_nhsblue_20    icb_darkgrey_100     icb_darkgrey_80     icb_darkgrey_60  #>           \"#ccdff1\"           \"#425563\"           \"#687782\"           \"#8e99a1\"  #>     icb_darkgrey_40     icb_darkgrey_20     icb_midgrey_100      icb_midgrey_80  #>           \"#b3bbc1\"           \"#d9dde0\"           \"#768692\"           \"#919ea8\"  #>      icb_midgrey_60      icb_midgrey_40      icb_midgrey_20     ics_black80_100  #>           \"#919ea8\"           \"#c8cfd3\"           \"#e4e7e9\"           \"#333333\"  #>      ics_purple_100       ics_purple_80       ics_purple_60       ics_purple_40  #>           \"#6059A3\"           \"#807ab5\"           \"#a09bc8\"           \"#bfbdda\"  #>       ics_purple_20        ics_pink_100         ics_pink_80         ics_pink_60  #>           \"#dfdeed\"           \"#CA589C\"           \"#d579b0\"           \"#df9bc4\"  #>         ics_pink_40         ics_pink_20   ics_limegreen_100    ics_limegreen_80  #>           \"#eabcd7\"           \"#f4deeb\"           \"#C0CA2E\"           \"#cdd558\"  #>    ics_limegreen_60    ics_limegreen_40    ics_limegreen_20 ics_brightgreen_100  #>           \"#d9df82\"           \"#e6eaab\"           \"#f2f4d5\"           \"#7FBE5E\"  #>  ics_brightgreen_80  ics_brightgreen_60  ics_brightgreen_40  ics_brightgreen_20  #>           \"#99cb7e\"           \"#b2d89e\"           \"#cce5bf\"           \"#e5f2df\"  #>        ics_teal_100         ics_teal_80         ics_teal_60         ics_teal_40  #>           \"#1B9B9D\"           \"#49afb1\"           \"#76c3c4\"           \"#a4d7d8\"  #>         ics_teal_20  #>           \"#d1ebeb\"  # or, just show some colours ncl_theme_cols(\"ics\", \"icb\", \"nhsblue\") #> <NA> <NA> <NA>  #>   NA   NA   NA  # or, select a single palette ncl_theme_cols(palette = \"icb_nhsblue\") #> icb_nhsblue_100  icb_nhsblue_80  icb_nhsblue_60  icb_nhsblue_40  icb_nhsblue_20  #>       \"#005EB8\"       \"#337ec6\"       \"#669ed4\"       \"#99bfe3\"       \"#ccdff1\""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_gradient_colour_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"NCL Theme Gradient colour Scale — ncl_theme_gradient_colour_scales","title":"NCL Theme Gradient colour Scale — ncl_theme_gradient_colour_scales","text":"Generates two colour gradient (low-high)","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_gradient_colour_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCL Theme Gradient colour Scale — ncl_theme_gradient_colour_scales","text":"","code":"scale_colour_ncl(   palette = c(\"ics\", \"icb\", \"icb_darkblue\", \"icb_brightblue\", \"icb_aquablue\",     \"icb_lightblue\", \"icb_nhsblue\", \"icb_darkgrey\", \"icb_midgrey\", \"ics_purple\",     \"ics_pink\", \"ics_limegreen\", \"ics_brightgreen\", \"ics_teal\"),   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_ncl(   palette = c(\"ics\", \"icb\", \"icb_darkblue\", \"icb_brightblue\", \"icb_aquablue\",     \"icb_lightblue\", \"icb_nhsblue\", \"icb_darkgrey\", \"icb_midgrey\", \"ics_purple\",     \"ics_pink\", \"ics_limegreen\", \"ics_brightgreen\", \"ics_teal\"),   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_ncl(   palette = c(\"ics\", \"icb\", \"icb_darkblue\", \"icb_brightblue\", \"icb_aquablue\",     \"icb_lightblue\", \"icb_nhsblue\", \"icb_darkgrey\", \"icb_midgrey\", \"ics_purple\",     \"ics_pink\", \"ics_limegreen\", \"ics_brightgreen\", \"ics_teal\"),   discrete = TRUE,   reverse = FALSE,   ... )"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_gradient_colour_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NCL Theme Gradient colour Scale — ncl_theme_gradient_colour_scales","text":"palette name palette use discrete Optional: boolean indicate scale discrete scale. Defaults TRUE reverse Optional: boolean reverse direction scale. Defaults FALSE ... additional arguments passed ggplot functions","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_gradient_colour_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NCL Theme Gradient colour Scale — ncl_theme_gradient_colour_scales","text":"scale object used ggplot object","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"NCL Theme Palettes — ncl_theme_pal","title":"NCL Theme Palettes — ncl_theme_pal","text":"function returns palette generated colorRampPalette one NCL palettes","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCL Theme Palettes — ncl_theme_pal","text":"","code":"ncl_theme_pal(   palette = c(\"ics\", \"icb\", \"icb_darkblue\", \"icb_brightblue\", \"icb_aquablue\",     \"icb_lightblue\", \"icb_nhsblue\", \"icb_darkgrey\", \"icb_midgrey\", \"ics_purple\",     \"ics_pink\", \"ics_limegreen\", \"ics_brightgreen\", \"ics_teal\"),   reverse = FALSE,   ... )"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NCL Theme Palettes — ncl_theme_pal","text":"palette name palette use reverse Optional: boolean value reverse palette ... arguments pass colorRamp","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_pal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NCL Theme Palettes — ncl_theme_pal","text":"colorRamp function","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/ncl_theme_pal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NCL Theme Palettes — ncl_theme_pal","text":"","code":"ncl_theme_pal() #> function (n)  #> { #>     x <- ramp(seq.int(0, 1, length.out = n)) #>     if (ncol(x) == 4L)  #>         rgb(x[, 1L], x[, 2L], x[, 3L], x[, 4L], maxColorValue = 255) #>     else rgb(x[, 1L], x[, 2L], x[, 3L], maxColorValue = 255) #> } #> <bytecode: 0x562e5dcdd588> #> <environment: 0x562e5dcda8a0> # or, specify a paltte ncl_theme_pal(\"ics\") #> function (n)  #> { #>     x <- ramp(seq.int(0, 1, length.out = n)) #>     if (ncol(x) == 4L)  #>         rgb(x[, 1L], x[, 2L], x[, 3L], x[, 4L], maxColorValue = 255) #>     else rgb(x[, 1L], x[, 2L], x[, 3L], maxColorValue = 255) #> } #> <bytecode: 0x562e5dcdd588> #> <environment: 0x562e5dc18bc8> # a reverse palette ncl_theme_pal(\"icb\", TRUE) #> function (n)  #> { #>     x <- ramp(seq.int(0, 1, length.out = n)) #>     if (ncol(x) == 4L)  #>         rgb(x[, 1L], x[, 2L], x[, 3L], x[, 4L], maxColorValue = 255) #>     else rgb(x[, 1L], x[, 2L], x[, 3L], maxColorValue = 255) #> } #> <bytecode: 0x562e5dcdd588> #> <environment: 0x562e5daf0d10>"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclicb.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the NCL ICB Theme for ggplot — theme_nclicb","title":"Creates the NCL ICB Theme for ggplot — theme_nclicb","text":"Creates base theme ggplot objects. default uses font requires extrafont package installed.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclicb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the NCL ICB Theme for ggplot — theme_nclicb","text":"","code":"theme_nclicb(base_family = \"opensans\")"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclicb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates the NCL ICB Theme for ggplot — theme_nclicb","text":"base_family font use theme","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclicb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates the NCL ICB Theme for ggplot — theme_nclicb","text":"","code":"if (FALSE) { library(ggplot2) library(NCLtemplates) ggplot(iris, aes(Sepal.Width, Sepal.Length, colour = Species)) +   geom_point() +   theme_nclicb() }"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclics.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the NCL ICS Theme for ggplot — theme_nclics","title":"Creates the NCL ICS Theme for ggplot — theme_nclics","text":"Creates base theme ggplot objects. default uses font requires extrafont package installed.","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the NCL ICS Theme for ggplot — theme_nclics","text":"","code":"theme_nclics(base_family = \"opensans\")"},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates the NCL ICS Theme for ggplot — theme_nclics","text":"base_family font use theme","code":""},{"path":"https://ncl-icb-analytics.github.io/NCLRtemplates/reference/theme_nclics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates the NCL ICS Theme for ggplot — theme_nclics","text":"","code":"if (FALSE) { library(ggplot2) library(NCLtemplates) ggplot(iris, aes(Sepal.Width, Sepal.Length, colour = Species)) +   geom_point() +   theme_nclics() }"}]
